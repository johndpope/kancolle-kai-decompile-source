using System;
using System.Collections.Generic;
using UnityEngine;

public class EventParamMappings
{
	public static Dictionary<iTweenEvent.TweenType, Dictionary<string, Type>> mappings;

	static EventParamMappings()
	{
		EventParamMappings.mappings = new Dictionary<iTweenEvent.TweenType, Dictionary<string, Type>>();
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.AudioFrom, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioFrom).set_Item("audiosource", typeof(AudioSource));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioFrom).set_Item("volume", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioFrom).set_Item("pitch", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioFrom).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioFrom).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioFrom).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioFrom).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioFrom).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioFrom).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioFrom).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioFrom).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioFrom).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioFrom).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioFrom).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioFrom).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioFrom).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioFrom).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.AudioTo, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioTo).set_Item("audiosource", typeof(AudioSource));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioTo).set_Item("volume", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioTo).set_Item("pitch", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioTo).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioTo).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioTo).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioTo).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioTo).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioTo).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioTo).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioTo).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioTo).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioTo).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioTo).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioTo).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioTo).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioTo).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.AudioUpdate, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioUpdate).set_Item("audiosource", typeof(AudioSource));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioUpdate).set_Item("volume", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioUpdate).set_Item("pitch", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.AudioUpdate).set_Item("time", typeof(float));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.CameraFadeFrom, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeFrom).set_Item("amount", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeFrom).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeFrom).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeFrom).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeFrom).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeFrom).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeFrom).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeFrom).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeFrom).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeFrom).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeFrom).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeFrom).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeFrom).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeFrom).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeFrom).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.CameraFadeTo, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeTo).set_Item("amount", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeTo).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeTo).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeTo).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeTo).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeTo).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeTo).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeTo).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeTo).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeTo).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeTo).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeTo).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeTo).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeTo).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.CameraFadeTo).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.ColorFrom, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorFrom).set_Item("color", typeof(Color));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorFrom).set_Item("r", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorFrom).set_Item("g", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorFrom).set_Item("b", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorFrom).set_Item("a", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorFrom).set_Item("namedcolorvalue", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorFrom).set_Item("includechildren", typeof(bool));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorFrom).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorFrom).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorFrom).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorFrom).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorFrom).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorFrom).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorFrom).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorFrom).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorFrom).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorFrom).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorFrom).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorFrom).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorFrom).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorFrom).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.ColorTo, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorTo).set_Item("color", typeof(Color));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorTo).set_Item("r", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorTo).set_Item("g", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorTo).set_Item("b", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorTo).set_Item("a", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorTo).set_Item("namedcolorvalue", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorTo).set_Item("includechildren", typeof(bool));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorTo).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorTo).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorTo).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorTo).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorTo).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorTo).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorTo).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorTo).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorTo).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorTo).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorTo).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorTo).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorTo).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorTo).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.ColorUpdate, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorUpdate).set_Item("color", typeof(Color));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorUpdate).set_Item("r", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorUpdate).set_Item("g", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorUpdate).set_Item("b", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorUpdate).set_Item("a", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorUpdate).set_Item("namedcolorvalue", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorUpdate).set_Item("includechildren", typeof(bool));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ColorUpdate).set_Item("time", typeof(float));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.FadeFrom, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeFrom).set_Item("alpha", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeFrom).set_Item("amount", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeFrom).set_Item("includechildren", typeof(bool));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeFrom).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeFrom).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeFrom).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeFrom).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeFrom).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeFrom).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeFrom).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeFrom).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeFrom).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeFrom).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeFrom).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeFrom).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeFrom).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeFrom).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.FadeTo, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeTo).set_Item("alpha", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeTo).set_Item("amount", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeTo).set_Item("includechildren", typeof(bool));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeTo).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeTo).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeTo).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeTo).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeTo).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeTo).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeTo).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeTo).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeTo).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeTo).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeTo).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeTo).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeTo).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeTo).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.FadeUpdate, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeUpdate).set_Item("alpha", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeUpdate).set_Item("includechildren", typeof(bool));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.FadeUpdate).set_Item("time", typeof(float));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.LookFrom, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookFrom).set_Item("looktarget", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookFrom).set_Item("axis", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookFrom).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookFrom).set_Item("speed", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookFrom).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookFrom).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookFrom).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookFrom).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookFrom).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookFrom).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookFrom).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookFrom).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookFrom).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookFrom).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookFrom).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookFrom).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookFrom).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.LookTo, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookTo).set_Item("looktarget", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookTo).set_Item("axis", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookTo).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookTo).set_Item("speed", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookTo).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookTo).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookTo).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookTo).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookTo).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookTo).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookTo).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookTo).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookTo).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookTo).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookTo).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookTo).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookTo).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.LookUpdate, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookUpdate).set_Item("looktarget", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookUpdate).set_Item("axis", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.LookUpdate).set_Item("time", typeof(float));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.MoveAdd, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("amount", typeof(Vector3));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("x", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("y", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("z", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("orienttopath", typeof(bool));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("looktarget", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("looktime", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("axis", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("space", typeof(Space));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("speed", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveAdd).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.MoveBy, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("speed", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("amount", typeof(Vector3));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("x", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("y", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("z", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("orienttopath", typeof(bool));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("looktarget", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("looktime", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("axis", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("space", typeof(Space));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveBy).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.MoveFrom, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("position", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("path", typeof(Vector3OrTransformArray));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("movetopath", typeof(bool));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("x", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("y", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("z", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("orienttopath", typeof(bool));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("looktarget", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("looktime", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("lookahead", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("axis", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("islocal", typeof(bool));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("speed", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveFrom).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.MoveTo, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("position", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("path", typeof(Vector3OrTransformArray));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("movetopath", typeof(bool));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("x", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("y", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("z", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("orienttopath", typeof(bool));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("looktarget", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("looktime", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("lookahead", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("axis", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("islocal", typeof(bool));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("speed", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveTo).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.MoveUpdate, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveUpdate).set_Item("position", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveUpdate).set_Item("x", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveUpdate).set_Item("y", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveUpdate).set_Item("z", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveUpdate).set_Item("orienttopath", typeof(bool));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveUpdate).set_Item("looktarget", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveUpdate).set_Item("looktime", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveUpdate).set_Item("axis", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveUpdate).set_Item("islocal", typeof(bool));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.MoveUpdate).set_Item("time", typeof(float));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.PunchPosition, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("position", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("amount", typeof(Vector3));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("x", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("y", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("z", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("space", typeof(Space));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("looktarget", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("looktime", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("axis", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchPosition).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.PunchRotation, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchRotation).set_Item("position", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchRotation).set_Item("amount", typeof(Vector3));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchRotation).set_Item("x", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchRotation).set_Item("y", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchRotation).set_Item("z", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchRotation).set_Item("space", typeof(Space));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchRotation).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchRotation).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchRotation).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchRotation).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchRotation).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchRotation).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchRotation).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchRotation).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchRotation).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchRotation).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchRotation).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchRotation).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchRotation).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.PunchScale, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchScale).set_Item("position", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchScale).set_Item("amount", typeof(Vector3));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchScale).set_Item("x", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchScale).set_Item("y", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchScale).set_Item("z", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchScale).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchScale).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchScale).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchScale).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchScale).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchScale).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchScale).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchScale).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchScale).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchScale).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchScale).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchScale).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.PunchScale).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.RotateAdd, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateAdd).set_Item("amount", typeof(Vector3));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateAdd).set_Item("x", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateAdd).set_Item("y", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateAdd).set_Item("z", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateAdd).set_Item("space", typeof(Space));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateAdd).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateAdd).set_Item("speed", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateAdd).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateAdd).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateAdd).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateAdd).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateAdd).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateAdd).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateAdd).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateAdd).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateAdd).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateAdd).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateAdd).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateAdd).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateAdd).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.RotateBy, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateBy).set_Item("amount", typeof(Vector3));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateBy).set_Item("x", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateBy).set_Item("y", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateBy).set_Item("z", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateBy).set_Item("space", typeof(Space));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateBy).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateBy).set_Item("speed", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateBy).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateBy).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateBy).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateBy).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateBy).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateBy).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateBy).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateBy).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateBy).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateBy).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateBy).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateBy).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateBy).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.RotateFrom, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateFrom).set_Item("rotation", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateFrom).set_Item("x", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateFrom).set_Item("y", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateFrom).set_Item("z", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateFrom).set_Item("islocal", typeof(bool));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateFrom).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateFrom).set_Item("speed", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateFrom).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateFrom).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateFrom).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateFrom).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateFrom).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateFrom).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateFrom).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateFrom).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateFrom).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateFrom).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateFrom).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateFrom).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateFrom).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.RotateTo, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateTo).set_Item("rotation", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateTo).set_Item("x", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateTo).set_Item("y", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateTo).set_Item("z", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateTo).set_Item("islocal", typeof(bool));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateTo).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateTo).set_Item("speed", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateTo).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateTo).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateTo).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateTo).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateTo).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateTo).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateTo).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateTo).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateTo).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateTo).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateTo).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateTo).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateTo).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.RotateUpdate, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateUpdate).set_Item("rotation", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateUpdate).set_Item("x", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateUpdate).set_Item("y", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateUpdate).set_Item("z", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateUpdate).set_Item("islocal", typeof(bool));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.RotateUpdate).set_Item("time", typeof(float));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.ScaleAdd, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleAdd).set_Item("amount", typeof(Vector3));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleAdd).set_Item("x", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleAdd).set_Item("y", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleAdd).set_Item("z", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleAdd).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleAdd).set_Item("speed", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleAdd).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleAdd).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleAdd).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleAdd).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleAdd).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleAdd).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleAdd).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleAdd).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleAdd).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleAdd).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleAdd).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleAdd).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleAdd).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.ScaleBy, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleBy).set_Item("amount", typeof(Vector3));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleBy).set_Item("x", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleBy).set_Item("y", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleBy).set_Item("z", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleBy).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleBy).set_Item("speed", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleBy).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleBy).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleBy).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleBy).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleBy).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleBy).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleBy).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleBy).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleBy).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleBy).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleBy).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleBy).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleBy).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.ScaleFrom, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleFrom).set_Item("scale", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleFrom).set_Item("x", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleFrom).set_Item("y", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleFrom).set_Item("z", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleFrom).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleFrom).set_Item("speed", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleFrom).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleFrom).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleFrom).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleFrom).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleFrom).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleFrom).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleFrom).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleFrom).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleFrom).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleFrom).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleFrom).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleFrom).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleFrom).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.ScaleTo, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleTo).set_Item("scale", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleTo).set_Item("x", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleTo).set_Item("y", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleTo).set_Item("z", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleTo).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleTo).set_Item("speed", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleTo).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleTo).set_Item("easetype", typeof(iTween.EaseType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleTo).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleTo).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleTo).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleTo).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleTo).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleTo).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleTo).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleTo).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleTo).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleTo).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleTo).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.ScaleUpdate, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleUpdate).set_Item("scale", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleUpdate).set_Item("x", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleUpdate).set_Item("y", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleUpdate).set_Item("z", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ScaleUpdate).set_Item("time", typeof(float));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.ShakePosition, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("amount", typeof(Vector3));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("x", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("y", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("z", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("space", typeof(Space));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("orienttopath", typeof(bool));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("looktarget", typeof(Vector3OrTransform));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("looktime", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("axis", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakePosition).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.ShakeRotation, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeRotation).set_Item("amount", typeof(Vector3));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeRotation).set_Item("x", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeRotation).set_Item("y", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeRotation).set_Item("z", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeRotation).set_Item("space", typeof(Space));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeRotation).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeRotation).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeRotation).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeRotation).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeRotation).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeRotation).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeRotation).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeRotation).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeRotation).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeRotation).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeRotation).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeRotation).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeRotation).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.ShakeScale, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeScale).set_Item("amount", typeof(Vector3));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeScale).set_Item("x", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeScale).set_Item("y", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeScale).set_Item("z", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeScale).set_Item("time", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeScale).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeScale).set_Item("looptype", typeof(iTween.LoopType));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeScale).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeScale).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeScale).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeScale).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeScale).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeScale).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeScale).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeScale).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeScale).set_Item("oncompleteparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.ShakeScale).set_Item("ignoretimescale", typeof(bool));
		EventParamMappings.mappings.Add(iTweenEvent.TweenType.Stab, new Dictionary<string, Type>());
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.Stab).set_Item("audioclip", typeof(AudioClip));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.Stab).set_Item("audiosource", typeof(AudioSource));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.Stab).set_Item("volume", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.Stab).set_Item("pitch", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.Stab).set_Item("delay", typeof(float));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.Stab).set_Item("onstart", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.Stab).set_Item("onstarttarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.Stab).set_Item("onstartparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.Stab).set_Item("onupdate", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.Stab).set_Item("onupdatetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.Stab).set_Item("onupdateparams", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.Stab).set_Item("oncomplete", typeof(string));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.Stab).set_Item("oncompletetarget", typeof(GameObject));
		EventParamMappings.mappings.get_Item(iTweenEvent.TweenType.Stab).set_Item("oncompleteparams", typeof(string));
	}
}
